//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UNO_Client.LoginServices {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="LoginServices.ILoginServices", CallbackContract=typeof(UNO_Client.LoginServices.ILoginServicesCallback))]
    public interface ILoginServices {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginServices/Login", ReplyAction="http://tempuri.org/ILoginServices/LoginResponse")]
        void Login(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginServices/Login", ReplyAction="http://tempuri.org/ILoginServices/LoginResponse")]
        System.Threading.Tasks.Task LoginAsync(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginServices/IsLogged", ReplyAction="http://tempuri.org/ILoginServices/IsLoggedResponse")]
        void IsLogged(int idPlayer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginServices/IsLogged", ReplyAction="http://tempuri.org/ILoginServices/IsLoggedResponse")]
        System.Threading.Tasks.Task IsLoggedAsync(int idPlayer);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILoginServicesCallback {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginServices/LoginVerification", ReplyAction="http://tempuri.org/ILoginServices/LoginVerificationResponse")]
        void LoginVerification(bool result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginServices/IsLoggedResult", ReplyAction="http://tempuri.org/ILoginServices/IsLoggedResultResponse")]
        void IsLoggedResult(bool result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILoginServicesChannel : UNO_Client.LoginServices.ILoginServices, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LoginServicesClient : System.ServiceModel.DuplexClientBase<UNO_Client.LoginServices.ILoginServices>, UNO_Client.LoginServices.ILoginServices {
        
        public LoginServicesClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public LoginServicesClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public LoginServicesClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public LoginServicesClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public LoginServicesClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void Login(string username, string password) {
            base.Channel.Login(username, password);
        }
        
        public System.Threading.Tasks.Task LoginAsync(string username, string password) {
            return base.Channel.LoginAsync(username, password);
        }
        
        public void IsLogged(int idPlayer) {
            base.Channel.IsLogged(idPlayer);
        }
        
        public System.Threading.Tasks.Task IsLoggedAsync(int idPlayer) {
            return base.Channel.IsLoggedAsync(idPlayer);
        }
    }
}
